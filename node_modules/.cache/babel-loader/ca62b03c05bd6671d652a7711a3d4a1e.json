{"ast":null,"code":"var _jsxFileName = \"/media/md/Project File/Running Project/Assignments_7/sample-react/src/Components/InputData/InputData.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-self-compare */\nimport React, { useEffect, useState } from \"react\";\nimport fakeData from \"../../fakeData/MOCK_DATA.json\";\nimport DisplayData from \"../DisplayData/DisplayData\";\nimport \"./InputData.css\";\nimport AddedTeamPlayer from \"../AddedTeamPlayer/AddedTeamPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputData = () => {\n  _s();\n\n  //Data useState\n  const [users, setUsers] = useState([]);\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    setUsers(fakeData);\n  }, []); //Event handlers use\n\n  const handlePlyer = newPlyer => {\n    const myTeam = [...teams, newPlyer];\n    setTeams(myTeam);\n  };\n\n  const res = teams.filter(userid => userid.id);\n  console.log(res); // const onlyName = teams.map((pd) => pd.name);\n  // console.log(onlyName);\n  //  if (onlyName === onlyName) {\n  //   handlePlyer(false);\n  // } else {\n  //   handlePlyer(true);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(DisplayData, {\n                handlePlyer: handlePlyer,\n                users: user\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showTeam\",\n          children: /*#__PURE__*/_jsxDEV(AddedTeamPlayer, {\n            team: teams\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputData, \"4ObJQok9qCMWCNBht/243AJ1QbM=\");\n\n_c = InputData;\nexport default InputData;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputData\");","map":{"version":3,"sources":["/media/md/Project File/Running Project/Assignments_7/sample-react/src/Components/InputData/InputData.js"],"names":["React","useEffect","useState","fakeData","DisplayData","AddedTeamPlayer","InputData","users","setUsers","teams","setTeams","handlePlyer","newPlyer","myTeam","res","filter","userid","id","console","log","map","user"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACL,QAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAJsB,CAOtB;;AACA,QAAMQ,WAAW,GAAIC,QAAD,IAAc;AAChC,UAAMC,MAAM,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,QAAX,CAAf;AACAF,IAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,GAHD;;AAKD,QAAMC,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAaC,MAAM,IAAGA,MAAM,CAACC,EAA7B,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAduB,CAgBtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,sBACGP,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACT;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACE,QAAC,WAAD;AACE,gBAAA,WAAW,EAAEV,WADf;AAGE,gBAAA,KAAK,EAAEU;AAHT,iBAEOA,IAAI,CAACJ,EAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAER;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAlDD;;GAAMH,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["/* eslint-disable no-self-compare */\nimport React, { useEffect, useState } from \"react\";\nimport fakeData from \"../../fakeData/MOCK_DATA.json\";\nimport DisplayData from \"../DisplayData/DisplayData\";\nimport \"./InputData.css\";\nimport AddedTeamPlayer from \"../AddedTeamPlayer/AddedTeamPlayer\";\nconst InputData = () => {\n  //Data useState\n  const [users, setUsers] = useState([]);\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    setUsers(fakeData);\n  }, []);\n  //Event handlers use\n  const handlePlyer = (newPlyer) => {\n    const myTeam = [...teams, newPlyer];\n    setTeams(myTeam);\n  };\n \n const res = teams.filter(userid =>userid.id)\n console.log(res)\n\n  // const onlyName = teams.map((pd) => pd.name);\n  // console.log(onlyName);\n  //  if (onlyName === onlyName) {\n  //   handlePlyer(false);\n  // } else {\n  //   handlePlyer(true);\n  // }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {users.map((user) => (\n                <div className=\"col-md-4\">\n                  <DisplayData\n                    handlePlyer={handlePlyer}\n                    key={user.id}\n                    users={user}\n                  ></DisplayData>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"showTeam\">\n            <AddedTeamPlayer team={teams}></AddedTeamPlayer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputData;\n"]},"metadata":{},"sourceType":"module"}