{"ast":null,"code":"var _jsxFileName = \"/media/md/Project File/Running Project/Assignments_7/sample-react/src/Components/InputData/InputData.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport fakeData from \"../../fakeData/MOCK_DATA.json\";\nimport DisplayData from \"../DisplayData/DisplayData\";\nimport \"./InputData.css\";\nimport AddedTeamPlayer from \"../AddedTeamPlayer/AddedTeamPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputData = () => {\n  _s();\n\n  // const [users, setUsers] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [team, setTeam] = useState([]);\n  console.log(team);\n  let myTeam = [];\n  useEffect(() => {\n    // setUsers(fakeData);\n    setPlayers(fakeData);\n  }, []);\n  useEffect(() => {\n    setTeam(myTeam);\n  }, [myTeam]); // eslint-disable-next-line no-unused-vars\n\n  const handlePlyer = newPlyer => {\n    myTeam.push(newPlyer);\n    console.log('inside Handler', myTeam);\n  }; // setPlayer(myTeam)\n\n\n  console.log('outside Handler', myTeam);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: players.map(user => /*#__PURE__*/_jsxDEV(DisplayData, {\n                handlePlyer: handlePlyer,\n                users: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(AddedTeamPlayer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputData, \"134xWmRxgGWtbDLySLTvoDgL9wk=\");\n\n_c = InputData;\nexport default InputData;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputData\");","map":{"version":3,"sources":["/media/md/Project File/Running Project/Assignments_7/sample-react/src/Components/InputData/InputData.js"],"names":["React","useEffect","useState","fakeData","DisplayData","AddedTeamPlayer","InputData","players","setPlayers","team","setTeam","console","log","myTeam","handlePlyer","newPlyer","push","map","user"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,MAAM,GAAG,EAAb;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,UAAU,CAACL,QAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACG,MAAD,CAAP;AACD,GAFQ,EAEP,CAACA,MAAD,CAFO,CAAT,CAXsB,CAetB;;AAEA,QAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9BF,IAAAA,MAAM,CAACG,IAAP,CAAYD,QAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,MAA9B;AACH,GAHD,CAjBsB,CAsBxB;;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,MAA/B;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,wBACGN,OAAO,CAACU,GAAR,CAAaC,IAAD,iBACX,QAAC,WAAD;AACE,gBAAA,WAAW,EAAEJ,WADf;AAEE,gBAAA,KAAK,EAAEI;AAFT;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAA,iCAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnDD;;GAAMZ,S;;KAAAA,S;AAqDN,eAAeA,SAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport fakeData from \"../../fakeData/MOCK_DATA.json\";\nimport DisplayData from \"../DisplayData/DisplayData\";\nimport \"./InputData.css\";\nimport AddedTeamPlayer from \"../AddedTeamPlayer/AddedTeamPlayer\";\nconst InputData = () => {\n  // const [users, setUsers] = useState([]);\n  const [players,setPlayers] = useState([]);\n  const [team, setTeam]= useState([]);\n  console.log(team);\n  let myTeam = [];\n  useEffect(() => {\n    // setUsers(fakeData);\n    setPlayers(fakeData);\n  }, []);\n  \n  useEffect(() => {\n    setTeam(myTeam);\n  },[myTeam])\n\n  // eslint-disable-next-line no-unused-vars\n  \n  const handlePlyer = (newPlyer) => {\n      myTeam.push(newPlyer)  \n      console.log('inside Handler', myTeam)\n  };\n\n// setPlayer(myTeam)\nconsole.log('outside Handler', myTeam)\n  \n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                {players.map((user) => (\n                  <DisplayData\n                    handlePlyer={handlePlyer}\n                    users={user}\n                  ></DisplayData>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div>\n            {/* <h1>payer {player.length}</h1> */}\n            <AddedTeamPlayer></AddedTeamPlayer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputData;\n"]},"metadata":{},"sourceType":"module"}